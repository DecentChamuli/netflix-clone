{"version":3,"sources":["components/Navbar.jsx","axios.js","requests.js","components/Banner.jsx","components/Row.jsx","App.js","index.js"],"names":["Navbar","useState","show","handleShow","useEffect","window","addEventListener","scrollY","removeEventListener","className","src","alt","instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","movie","setMovie","a","get","request","data","results","Math","floor","random","length","fetchData","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","overview","substr","Row","fetchUrl","isLargeRow","movies","setMovies","map","poster_path","id","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b44df1cb.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './Navbar.css'\r\n\r\nfunction Navbar() {\r\n\r\n// 2:34:00 in video\r\n\r\n    const [show, handleShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if (window.scrollY > 100){\r\n                handleShow(true);\r\n            } else handleShow(false);\r\n        })\r\n        return () => {\r\n            window.removeEventListener(\"scroll\")\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className={`nav ${show && \"nav__black\"}`}>\r\n            <img\r\n                className=\"nav__logo\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\r\n                alt=\"Netflix Logo\"\r\n            />\r\n            <img\r\n                className=\"nav__avatar\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\r\n                alt=\"User Profile\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;","const API_KEY = \"9fb67752d66a323b0bbc7b071d00abf4\";\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n// 28:12 for links confirmation\r\nexport default requests;","import React, { useEffect, useState } from 'react'\r\nimport axios from '../axios'\r\nimport requests from '../requests';\r\nimport './Banner.css'\r\n// import styled from 'styled-components'\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([]);\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(requests.fetchNetflixOriginals);\r\n            setMovie(request.data.results[\r\n                Math.floor(Math.random() * request.data.results.length - 1)\r\n            ]);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, []);\r\n    // console.log(movie);\r\n\r\n    function truncate(str, n) {\r\n        return str?.length > n ? str.substr(0, n-1) + \"...\" :str;\r\n    }\r\n\r\n    return (\r\n        <header className=\"banner\"\r\n            style={{\r\n                backgroundSize: \"cover\",\r\n                backgroundImage: `url(\r\n                    \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\r\n                )`,\r\n                backgroundPosition: \"center center\",\r\n            }}>\r\n            <div className=\"banner__contents\">\r\n                <h1 className=\"banner__title\">\r\n                    {movie?.title || movie?.name || movie?.original_name}\r\n                </h1>\r\n                <div className=\"banner__buttons\">\r\n                    <button className=\"banner__button\">Play</button>\r\n                    <button className=\"banner__button\">My List</button>\r\n                </div>\r\n                <h1 className=\"banner__description\">{truncate(movie?.overview, 150)}</h1>\r\n            </div>\r\n            <div className=\"banner--fadeBottom\" />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from '../axios'\r\nimport './Row.css'\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n\r\n    // console.table(movies);\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n            <div className=\"row__posters\">\r\n                {movies.map((movie) => (\r\n                    <img\r\n                        key={movie.id}\r\n\r\n                        // At video 1:36:15\r\n                        className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n                        src={`${base_url}${\r\n                            isLargeRow ? movie.poster_path : movie.backdrop_path}`}\r\n                        alt={movie.name}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","import './App.css';\nimport Navbar from './components/Navbar'\nimport Banner from './components/Banner'\nimport Row from './components/Row'\nimport requests from './requests';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Navbar />\n      <Banner />\n\n      <Row title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchNetflixOriginals} \n        isLargeRow\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}